/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Swagger Provider Documentation
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è Swagger —Å—Ö–µ–º –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
 * OpenAPI spec version: 1.0
 */
import {axiosInstance as axios} from './axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  AddMemberToWorkspaceDto,
  AppControllerGetHealth200,
  AuthControllerCallbackParams,
  AuthControllerLogin200,
  ConnectToProviderResponseDto,
  CreateMicroserviceDto,
  CreateProjectDto,
  CreateSnippetDto,
  CreateWorkspaceDto,
  LoginDto,
  RegisterDto,
  UpdateSnippetDto,
  UpdateUserDto
} from '../../model'



  /**
 * @summary –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerRegister = <TData = AxiosResponse<void>>(
    registerDto: RegisterDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/auth/register`,
      registerDto,options
    );
  }

/**
 * @summary –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerLogin = <TData = AxiosResponse<AuthControllerLogin200>>(
    loginDto: LoginDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/auth/login`,
      loginDto,options
    );
  }

/**
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏

–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Ñ—Ä–æ–Ω—Ç –ø–æ –∞–¥—Ä–µ—Å—É –≤–º–µ—Å—Ç–µ —Å —Ç–æ–∫–µ–Ω–æ–º /auth/callback?accessToken=–¢–û–ö–ï–ù
 * @summary –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Oauth
 */
export const authControllerCallback = <TData = AxiosResponse<void>>(
    provider: 'yandex' | 'github',
    params: AuthControllerCallbackParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/auth/oauth/callback/${provider}`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Oauth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
 */
export const authControllerConnect = <TData = AxiosResponse<ConnectToProviderResponseDto>>(
    provider: 'yandex' | 'github', options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/auth/oauth/connect/${provider}`,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const userControllerFindProfile = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/user/profile`,options
    );
  }

/**
 * @summary –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const userControllerUpdateProfile = <TData = AxiosResponse<unknown>>(
    updateUserDto: UpdateUserDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/api/user/profile`,
      updateUserDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
 */
export const userControllerFindById = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/user/by-id/${id}`,options
    );
  }

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
 */
export const workspaceControllerCreate = <TData = AxiosResponse<unknown>>(
    createWorkspaceDto: CreateWorkspaceDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/workspace`,
      createWorkspaceDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const workspaceControllerFindAll = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/workspace`,options
    );
  }

/**
 * @summary –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
 */
export const workspaceControllerAddMemberToWorkspace = <TData = AxiosResponse<unknown>>(
    addMemberToWorkspaceDto: AddMemberToWorkspaceDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/workspace/add-member`,
      addMemberToWorkspaceDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
 */
export const workspaceControllerFindOne = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/workspace/${id}`,options
    );
  }

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
 */
export const projectControllerCreate = <TData = AxiosResponse<unknown>>(
    createProjectDto: CreateProjectDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/project`,
      createProjectDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
 */
export const projectControllerFindAllBuWorkspace = <TData = AxiosResponse<unknown>>(
    workspaceId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/project/by-workspace/${workspaceId}`,options
    );
  }

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ (—Å—Ö–µ–º—ã)
 */
export const microserviceControllerCreate = <TData = AxiosResponse<unknown>>(
    createMicroserviceDto: CreateMicroserviceDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/microservice`,
      createMicroserviceDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ö–µ–º—ã
 */
export const microserviceControllerFindOne = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/microservice/${id}`,options
    );
  }

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ —Å–Ω–∏–ø–ø–µ—Ç–∞
 */
export const snippetControllerCreate = <TData = AxiosResponse<unknown>>(
    createSnippetDto: CreateSnippetDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/snippet`,
      createSnippetDto,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const snippetControllerFindAll = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/snippet`,options
    );
  }

/**
 * @summary –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–Ω–∏–ø–ø–µ—Ç–∞
 */
export const snippetControllerUpdate = <TData = AxiosResponse<unknown>>(
    id: string,
    updateSnippetDto: UpdateSnippetDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/api/snippet/${id}`,
      updateSnippetDto,options
    );
  }

/**
 * @summary –£–¥–∞–ª–µ–Ω–∏–µ —Å–Ω–∏–ø–ø–µ—Ç–∞
 */
export const snippetControllerRemove = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/snippet/${id}`,options
    );
  }

/**
 * @summary –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ë–î
 */
export const appControllerGetHealth = <TData = AxiosResponse<AppControllerGetHealth200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/health`,options
    );
  }

export type AuthControllerRegisterResult = AxiosResponse<void>
export type AuthControllerLoginResult = AxiosResponse<AuthControllerLogin200>
export type AuthControllerCallbackResult = AxiosResponse<void>
export type AuthControllerConnectResult = AxiosResponse<ConnectToProviderResponseDto>
export type UserControllerFindProfileResult = AxiosResponse<unknown>
export type UserControllerUpdateProfileResult = AxiosResponse<unknown>
export type UserControllerFindByIdResult = AxiosResponse<unknown>
export type WorkspaceControllerCreateResult = AxiosResponse<unknown>
export type WorkspaceControllerFindAllResult = AxiosResponse<unknown>
export type WorkspaceControllerAddMemberToWorkspaceResult = AxiosResponse<unknown>
export type WorkspaceControllerFindOneResult = AxiosResponse<unknown>
export type ProjectControllerCreateResult = AxiosResponse<unknown>
export type ProjectControllerFindAllBuWorkspaceResult = AxiosResponse<unknown>
export type MicroserviceControllerCreateResult = AxiosResponse<unknown>
export type MicroserviceControllerFindOneResult = AxiosResponse<unknown>
export type SnippetControllerCreateResult = AxiosResponse<unknown>
export type SnippetControllerFindAllResult = AxiosResponse<unknown>
export type SnippetControllerUpdateResult = AxiosResponse<unknown>
export type SnippetControllerRemoveResult = AxiosResponse<void>
export type AppControllerGetHealthResult = AxiosResponse<AppControllerGetHealth200>
