/**
 * Generated by orval v7.4.1 üç∫
 * Do not edit manually.
 * Swagger Provider Documentation
 * 123
 * OpenAPI spec version: 1.0
 */
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import { axiosInstance as axios } from "./axios";
import type {
    AddMemberToWorkspaceDto,
    AuthControllerCallbackParams,
    ConfirmationDto,
    CreateMicroserviceDto,
    CreateProjectDto,
    CreateWorkspaceDto,
    LoginDto,
    NewPasswordDto,
    RegisterDto,
    ResetPasswordDto,
    UpdateUserDto,
} from "../../model";

export const authControllerRegister = <TData = AxiosResponse<void>>(
    registerDto: RegisterDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/auth/register`, registerDto, options);
};

export const authControllerLogin = <TData = AxiosResponse<void>>(
    loginDto: LoginDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/auth/login`, loginDto, options);
};

export const authControllerCallback = <TData = AxiosResponse<void>>(
    provider: string,
    params: AuthControllerCallbackParams,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/auth/oauth/callback/${provider}`, {
        ...options,
        params: { ...params, ...options?.params },
    });
};

export const authControllerConnect = <TData = AxiosResponse<void>>(
    provider: string,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/auth/oauth/connect/${provider}`, options);
};

export const authControllerLogout = <TData = AxiosResponse<void>>(options?: AxiosRequestConfig): Promise<TData> => {
    return axios.post(`/api/auth/logout`, undefined, options);
};

export const userControllerFindProfile = <TData = AxiosResponse<void>>(
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/user/profile`, options);
};

export const userControllerUpdateProfile = <TData = AxiosResponse<void>>(
    updateUserDto: UpdateUserDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.patch(`/api/user/profile`, updateUserDto, options);
};

export const userControllerFindById = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/user/by-id/${id}`, options);
};

export const emailConfirmationControllerNewVerification = <TData = AxiosResponse<void>>(
    confirmationDto: ConfirmationDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/auth/email-confirmation`, confirmationDto, options);
};

export const passwordRecoveryControllerResetPassword = <TData = AxiosResponse<void>>(
    resetPasswordDto: ResetPasswordDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/auth/password-recovery/reset`, resetPasswordDto, options);
};

export const passwordRecoveryControllerNewPassword = <TData = AxiosResponse<void>>(
    token: string,
    newPasswordDto: NewPasswordDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/auth/password-recovery/new/${token}`, newPasswordDto, options);
};

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
 */
export const workspaceControllerCreate = <TData = AxiosResponse<void>>(
    createWorkspaceDto: CreateWorkspaceDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/workspace`, createWorkspaceDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const workspaceControllerFindAll = <TData = AxiosResponse<void>>(
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/workspace`, options);
};

/**
 * @summary –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
 */
export const workspaceControllerAddMemberToWorkspace = <TData = AxiosResponse<void>>(
    addMemberToWorkspaceDto: AddMemberToWorkspaceDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/workspace/add-member`, addMemberToWorkspaceDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
 */
export const workspaceControllerFindOne = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/workspace/${id}`, options);
};

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
 */
export const projectControllerCreate = <TData = AxiosResponse<void>>(
    createProjectDto: CreateProjectDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/project`, createProjectDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
 */
export const projectControllerFindAllBuWorkspace = <TData = AxiosResponse<void>>(
    workspaceId: string,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/project/by-workspace/${workspaceId}`, options);
};

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ (—Å—Ö–µ–º—ã)
 */
export const microserviceControllerCreate = <TData = AxiosResponse<void>>(
    createMicroserviceDto: CreateMicroserviceDto,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.post(`/api/microservice`, createMicroserviceDto, options);
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ö–µ–º—ã
 */
export const microserviceControllerFindOne = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig,
): Promise<TData> => {
    return axios.get(`/api/microservice/${id}`, options);
};

export type AuthControllerRegisterResult = AxiosResponse<void>;
export type AuthControllerLoginResult = AxiosResponse<void>;
export type AuthControllerCallbackResult = AxiosResponse<void>;
export type AuthControllerConnectResult = AxiosResponse<void>;
export type AuthControllerLogoutResult = AxiosResponse<void>;
export type UserControllerFindProfileResult = AxiosResponse<void>;
export type UserControllerUpdateProfileResult = AxiosResponse<void>;
export type UserControllerFindByIdResult = AxiosResponse<void>;
export type EmailConfirmationControllerNewVerificationResult = AxiosResponse<void>;
export type PasswordRecoveryControllerResetPasswordResult = AxiosResponse<void>;
export type PasswordRecoveryControllerNewPasswordResult = AxiosResponse<void>;
export type WorkspaceControllerCreateResult = AxiosResponse<void>;
export type WorkspaceControllerFindAllResult = AxiosResponse<void>;
export type WorkspaceControllerAddMemberToWorkspaceResult = AxiosResponse<void>;
export type WorkspaceControllerFindOneResult = AxiosResponse<void>;
export type ProjectControllerCreateResult = AxiosResponse<void>;
export type ProjectControllerFindAllBuWorkspaceResult = AxiosResponse<void>;
export type MicroserviceControllerCreateResult = AxiosResponse<void>;
export type MicroserviceControllerFindOneResult = AxiosResponse<void>;
